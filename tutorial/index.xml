<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on BatMass</title>
    <link>http://batmass.github.io/tutorial/</link>
    <description>Recent content in Tutorials on BatMass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Dmitry Avtonomov. Released under the Apache 2.0 license.</copyright>
    
	<atom:link href="http://batmass.github.io/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up development environment</title>
      <link>http://batmass.github.io/tutorial/setting-up-development-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://batmass.github.io/tutorial/setting-up-development-environment/</guid>
      <description>This guide will quickly step you through setting up the environment for developing new functionality for BatMass. All the downloads, setting up the IDE and up to building BatMass from scratch.
Setting up development environement for BatMass You will only need this information if you want to develop your own plugins for BatMass or change its functionality in some way, if you&amp;rsquo;re just a regular user you can skip this tutorial.</description>
    </item>
    
    <item>
      <title>Developing the first plugin</title>
      <link>http://batmass.github.io/tutorial/developing-first-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://batmass.github.io/tutorial/developing-first-plugin/</guid>
      <description>In this guide we will develop a new module for BatMass that will add support for a new file format for detected LC/MS features.
We will need to:
 Create a new NetBeans module Create a parser for the file Add support for the new file type Add support for importing the file into a project Add basic support for viewing the data in tabular viewer and overlay of data over Map2D  The prerequisite for this tutorial is that you have the development environment set up.</description>
    </item>
    
    <item>
      <title>Using data access library</title>
      <link>http://batmass.github.io/tutorial/data-access-layer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://batmass.github.io/tutorial/data-access-layer/</guid>
      <description>In this guide we will quickly go through using the standalone java library for accessing some common mass spectrometry data formats. This is the same library that powers BatMass.
All the classes responsible for parsing files live in umich.ms.fileio.filetypes package, each in its own subpackage, e.g. umich.ms.fileio.filetypes.pepxml for PepXML files. Most of those sub-packages contain a separate package example with working examples.
The source code for the library lives in MSFTBX repository on GitHub.</description>
    </item>
    
    <item>
      <title>Overlay peptide IDs on 2D map</title>
      <link>http://batmass.github.io/tutorial/overlay-peptide-ids-on-map2d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://batmass.github.io/tutorial/overlay-peptide-ids-on-map2d/</guid>
      <description>For this tutorial you will need a .pep.xml file and a corresponding mzML/mzXML file. The .pep.xml file MUST contain retention time information (retention_time_sec attribute in spectrum_query tags). You will likely have that if you used mzML/mzXML or native file formats to perform the search (instead of something like an mgf file).
Importing .pep.xml file In a Proteomics project right-click Identifications node and select Import.
Overlaying and viewing peptides as a table To display the tabular view right-click the imported file, select View -&amp;gt; Table.</description>
    </item>
    
    <item>
      <title>Display custom data on 2D map</title>
      <link>http://batmass.github.io/tutorial/custom-drawing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://batmass.github.io/tutorial/custom-drawing/</guid>
      <description>In this guide I will show how to overlay custom rectangles on Map2D. It supports colors and opacity as well. We will need to:
 Write an .mzrt.csv file Import the file to features section Display in a table or overlay on 2D map  There are no prerequisites for this tutorial except for Getting started Tutorial.
Writing .mzrt.csv file All you need is a delimited file of a very simple format.</description>
    </item>
    
  </channel>
</rss>